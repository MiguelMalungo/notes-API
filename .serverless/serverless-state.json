{
  "service": {
    "service": "notes-api",
    "serviceObject": {
      "name": "notes-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "profile": "MiguelMalungo",
      "region": "eu-north-1",
      "iam": {
        "role": "arn:aws:iam::213613991334:role/notes"
      },
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateNoteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-createNote"
            }
          },
          "GetNotesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-getNotes"
            }
          },
          "ChangeNoteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-changeNote"
            }
          },
          "DeleteNoteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-deleteNote"
            }
          },
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-signup"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-login"
            }
          },
          "CreateNoteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z/createNote.zip"
              },
              "Handler": "functions/createNote/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-createNote",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::213613991334:role/notes"
            },
            "DependsOn": [
              "CreateNoteLogGroup"
            ]
          },
          "GetNotesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z/getNotes.zip"
              },
              "Handler": "functions/getNotes/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-getNotes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::213613991334:role/notes"
            },
            "DependsOn": [
              "GetNotesLogGroup"
            ]
          },
          "ChangeNoteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z/changeNote.zip"
              },
              "Handler": "functions/changeNote/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-changeNote",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::213613991334:role/notes"
            },
            "DependsOn": [
              "ChangeNoteLogGroup"
            ]
          },
          "DeleteNoteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z/deleteNote.zip"
              },
              "Handler": "functions/deleteNote/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-deleteNote",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::213613991334:role/notes"
            },
            "DependsOn": [
              "DeleteNoteLogGroup"
            ]
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z/signup.zip"
              },
              "Handler": "functions/signup/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-signup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::213613991334:role/notes"
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z/login.zip"
              },
              "Handler": "functions/login/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::213613991334:role/notes"
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "ChangeNoteLambdaVersionFa4SKCuVF6vUTAvSWmMFJDCJqyTBZU8wUTKJkZ12k": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ChangeNoteLambdaFunction"
              },
              "CodeSha256": "qNsYm2dyLpbvvpe2n2vNnJjexYTe6P2owQcNJGlWCms="
            }
          },
          "GetNotesLambdaVersionOBJJD3UXXHu86tZcl7g3UeVAFPWw3meNnj8OHETc2o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetNotesLambdaFunction"
              },
              "CodeSha256": "ZUoXAY9rd/tqUWmeo3a6n5kwSXo2Cmfej6ed7kQSlh4="
            }
          },
          "CreateNoteLambdaVersionzwoRmncMZ9V9hbxoCQJAbMJhehcIuAK4nmcNsIzi38": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateNoteLambdaFunction"
              },
              "CodeSha256": "oYJ2uOQLUZM81R9xOOB45eB2wJY50J7NIHlBhdmuN9U="
            }
          },
          "DeleteNoteLambdaVersion4QFJDVLvzCWsYdfoDJZPCc5XUu0kiBFaIeVQP2q104": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteNoteLambdaFunction"
              },
              "CodeSha256": "iLb2EY4KfaX0ZyQoFF2CywHVizwQ6l+gCMteT4jHmQk="
            }
          },
          "SignupLambdaVersiona23amyYQfhgG7P0h1BubNDn6rAjXEg0y6w8jNPlv3t4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "DeXjkQc1zbeM+I/zQOt8n6iDlW7ykqQRN5ejmo5iD5I="
            }
          },
          "LoginLambdaVersionDTS4HQcvtaD5Dft8iLK9Pe6u5djzeLRnoS2LyLv8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "PSnVoWWfrU6ADYU26rcKCDJngSbSbbdVQi3hDJQpwRg="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-notes-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreateNoteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateNoteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateNote": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateNoteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiNotes": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/notes",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateNote"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateNote"
          },
          "GetNotesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetNotesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetNotes": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetNotesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiNotes": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/notes",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetNotes"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetNotes"
          },
          "ChangeNoteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ChangeNoteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationChangeNote": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ChangeNoteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutApiNotes": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /api/notes",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationChangeNote"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationChangeNote"
          },
          "DeleteNoteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteNoteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteNote": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteNoteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteApiNotes": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /api/notes",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteNote"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteNote"
          },
          "SignupLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignup": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SignupLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiUserSignup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/user/signup",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignup"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignup"
          },
          "LoginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationLogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"LoginLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiUserLogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/user/login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationLogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationLogin"
          },
          "UserNotesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "UserNotes",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Users",
              "AttributeDefinitions": [
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "username",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-notes-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "ChangeNoteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ChangeNoteLambdaVersionFa4SKCuVF6vUTAvSWmMFJDCJqyTBZU8wUTKJkZ12k"
            },
            "Export": {
              "Name": "sls-notes-api-dev-ChangeNoteLambdaFunctionQualifiedArn"
            }
          },
          "GetNotesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetNotesLambdaVersionOBJJD3UXXHu86tZcl7g3UeVAFPWw3meNnj8OHETc2o"
            },
            "Export": {
              "Name": "sls-notes-api-dev-GetNotesLambdaFunctionQualifiedArn"
            }
          },
          "CreateNoteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateNoteLambdaVersionzwoRmncMZ9V9hbxoCQJAbMJhehcIuAK4nmcNsIzi38"
            },
            "Export": {
              "Name": "sls-notes-api-dev-CreateNoteLambdaFunctionQualifiedArn"
            }
          },
          "DeleteNoteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteNoteLambdaVersion4QFJDVLvzCWsYdfoDJZPCc5XUu0kiBFaIeVQP2q104"
            },
            "Export": {
              "Name": "sls-notes-api-dev-DeleteNoteLambdaFunctionQualifiedArn"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersiona23amyYQfhgG7P0h1BubNDn6rAjXEg0y6w8jNPlv3t4"
            },
            "Export": {
              "Name": "sls-notes-api-dev-SignupLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionDTS4HQcvtaD5Dft8iLK9Pe6u5djzeLRnoS2LyLv8"
            },
            "Export": {
              "Name": "sls-notes-api-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-notes-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-notes-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "createNote": {
        "handler": "functions/createNote/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/notes",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/notes"
          }
        ],
        "name": "notes-api-dev-createNote",
        "package": {
          "artifact": ".serverless/createNote.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateNoteLambdaVersionzwoRmncMZ9V9hbxoCQJAbMJhehcIuAK4nmcNsIzi38"
      },
      "getNotes": {
        "handler": "functions/getNotes/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/notes",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/notes"
          }
        ],
        "name": "notes-api-dev-getNotes",
        "package": {
          "artifact": ".serverless/getNotes.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetNotesLambdaVersionOBJJD3UXXHu86tZcl7g3UeVAFPWw3meNnj8OHETc2o"
      },
      "changeNote": {
        "handler": "functions/changeNote/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/notes",
              "method": "PUT"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/api/notes"
          }
        ],
        "name": "notes-api-dev-changeNote",
        "package": {
          "artifact": ".serverless/changeNote.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ChangeNoteLambdaVersionFa4SKCuVF6vUTAvSWmMFJDCJqyTBZU8wUTKJkZ12k"
      },
      "deleteNote": {
        "handler": "functions/deleteNote/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/notes",
              "method": "DELETE"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/api/notes"
          }
        ],
        "name": "notes-api-dev-deleteNote",
        "package": {
          "artifact": ".serverless/deleteNote.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteNoteLambdaVersion4QFJDVLvzCWsYdfoDJZPCc5XUu0kiBFaIeVQP2q104"
      },
      "signup": {
        "handler": "functions/signup/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/user/signup",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/user/signup"
          }
        ],
        "name": "notes-api-dev-signup",
        "package": {
          "artifact": ".serverless/signup.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SignupLambdaVersiona23amyYQfhgG7P0h1BubNDn6rAjXEg0y6w8jNPlv3t4"
      },
      "login": {
        "handler": "functions/login/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/user/login",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/user/login"
          }
        ],
        "name": "notes-api-dev-login",
        "package": {
          "artifact": ".serverless/login.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionDTS4HQcvtaD5Dft8iLK9Pe6u5djzeLRnoS2LyLv8"
      }
    },
    "resources": {
      "Resources": {
        "UserNotesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "UserNotes",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Users",
            "AttributeDefinitions": [
              {
                "AttributeName": "username",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "username",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "notes-api",
      "frameworkVersion": "3",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/notes-api/dev/code-artifacts",
        "artifactDirectoryName": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/notes-api/dev/1701436355021-2023-12-01T13:12:35.021Z",
    "artifact": ""
  }
}